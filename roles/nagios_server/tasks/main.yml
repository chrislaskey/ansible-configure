---
# This task installs and manages the Nagios server

- name: Nagios Server | Install Nagios
  yum: name={{ item }} state=present
  with_items:
   - nagios

- name: Nagios Server | Update main config file
  template: src=nagios.cfg dest=/etc/nagios/nagios.cfg owner=root group=root mode=0664
  notify: restart nagios

- name: Nagios Server | Sync plugins
  synchronize: src="{{ nagios_plugins_src }}" dest="{{ nagios_plugins_dest }}"
  when: nagios_plugins_src|default("None") != "None"

- name: Nagios Server | Update plugin file permissions
  file: path="{{ nagios_plugins_dest }}" owner=nagios group=nagios mode=0750 recurse=yes

- name: Nagios Server | Update plugin directory permissions
  shell: "find {{ nagios_plugins_dest }} -type d | xargs -I {} chmod 0755 {}"

- name: Nagios Server | Remove base config files
  file: path="{{ item }}" state=absent
  with_items:
    - /etc/nagios/commands.cfg
    - "{{ nagios_config_dest }}contacts_nagios2.cfg"
    - "{{ nagios_config_dest }}generic-host_nagios2.cfg"
    - "{{ nagios_config_dest }}generic-service_nagios2.cfg"
    - "{{ nagios_config_dest }}timeperiods_nagios2.cfg"
    - "{{ nagios_config_dest }}check_mk/check_mk_templates.cfg"
    - "{{ nagios_objects_dir }}commands.cfg"
    - "{{ nagios_objects_dir }}contacts.cfg"
    - "{{ nagios_objects_dir }}localhost.cfg"
    - "{{ nagios_objects_dir }}printer.cfg"
    - "{{ nagios_objects_dir }}switch.cfg"
    - "{{ nagios_objects_dir }}templates.cfg"
    - "{{ nagios_objects_dir }}timeperiods.cfg"
    - "{{ nagios_objects_dir }}windows.cfg"

- name: Nagios Server | Remove example config files
  file: path="{{ item }}" state=absent
  with_items:
    - "{{ nagios_config_dest }}extinfo_nagios2.cfg"
    - "{{ nagios_config_dest }}hostgroups_nagios2.cfg"
    - "{{ nagios_config_dest }}localhost_nagios2.cfg"
    - "{{ nagios_config_dest }}services_nagios2.cfg"
    - "{{ nagios_config_dest }}localhost.cfg"

- name: Nagios Server | Sync config files
  synchronize: src="{{ nagios_config_src }}" dest="{{ nagios_config_dest }}"
  when: nagios_config_src|default("None") != "None"

- name: Nagios Server | Update config file permissions
  file: path="{{ nagios_config_dest }}" owner=root group=root mode=0644 recurse=yes

- name: Nagios Server | Update config directory permissions
  shell: "find {{ nagios_config_dest }} -type d | xargs -I {} chmod 0755 {}"

- name: Nagios Server | Update nagios cgi config file
  template: src=cgi.cfg dest=/etc/nagios/cgi.cfg owner=root group=root mode=0664

- name: Nagios Server | Install python library passlib
  yum: name={{ item }} state=present
  with_items:
   - python-passlib

- name: Nagios Server | Copy htpasswd creation script
  copy: src=htpasswd.sh dest=/etc/httpd/htpasswd.sh owner=root group=root mode=0700

- name: Nagios Server | Create htpasswd
  command: "/etc/httpd/htpasswd.sh /etc/nagios/passwd {{ nagios.apache.username }} {{ nagios.apache.password }}"

- name: Nagios Server | Add nagios user to webserver group
  user: name=nagios groups=nagios,apache append=yes

- name: Nagios Server | Start Apache service
  service: name=httpd state=started enabled=true

- name: Nagios Server | Start Nagios service
  service: name=nagios state=started enabled=true
