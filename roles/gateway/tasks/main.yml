---

- name: Sysctl | Allow IP forwarding
  sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes
  ignore_errors: True

  # BU Linux 6.5 has some invalid default values in sysctl. These throw an
  # error, causing this command to appear to fail. For now using ugly hack of
  # ignore_errors.

# The following iptable rule management is based off Philip Norton's blog post. See:
# http://www.hashbangcode.com/blog/adding-iptables-rules-ansible

- name: Iptables | Get current rules
  shell: iptables-save
  register: iptablesrules
  always_run: yes

  # Note: the always_run attribute ensures the shell command is executed
  # even when using ansible --check flag. See:
  # http://docs.ansible.com/playbooks_checkmode.html

- name: Iptables | Create NAT masquerade rule
  shell: iptables -A POSTROUTING -t nat -o eth0 -j MASQUERADE -m comment --comment "Unique ID GATEWAYNAT gateway rule allows outside connections"
  when: iptablesrules.stdout.find("GATEWAYNAT") == -1

- name: Iptables | Create accept rule for eth2
  shell: iptables -I INPUT -t filter -i eth2 -j ACCEPT -m comment --comment "Unique ID GATEWAYACCEPTETH2 gateway rule accept incoming on private network eth2"
  when: iptablesrules.stdout.find("GATEWAYACCEPTETH2") == -1 

  # The -I flag prepends the new rules instead of appending them to the current
  # chain. This makes sure the new rules preceed any REJECT rules. But it can
  # cause problems in complex iptable setups. In that case, it is better to seed
  # the complete iptables file instead of adding each individual rule as done
  # here.

- name: Iptables | Create forward rule for eth2
  shell: iptables -I FORWARD -t filter -i eth2 -o eth0 -j ACCEPT -m comment --comment "Unique ID GATEWAYFORWARDETH2 gateway rule accept private network connections"
  when: iptablesrules.stdout.find("GATEWAYFORWARDETH2") == -1

- name: Iptables | Create forward rule for eth2
  shell: iptables -I FORWARD -t filter -i eth0 -o eth2 -m state --state RELATED,ESTABLISHED -j ACCEPT -m comment --comment "Unique ID GATEWAYINPUTETH2 gateway rule accept private network connections"
  when: iptablesrules.stdout.find("GATEWAYINPUTETH2") == -1

- name: Iptables | Create accept rule for eth1
  shell: iptables -I INPUT -t filter -i eth1 -j ACCEPT -m comment --comment "Unique ID GATEWAYACCEPTETH1 gateway rule accept incoming on private network eth1"
  when: iptablesrules.stdout.find("GATEWAYACCEPTETH1") == -1 

- name: Iptables | Create forward rule for eth1
  shell: iptables -I FORWARD -t filter -i eth1 -o eth0 -j ACCEPT -m comment --comment "Unique ID GATEWAYFORWARDETH1 gateway rule accept private network connections"
  when: iptablesrules.stdout.find("GATEWAYFORWARDETH1") == -1 

- name: Iptables | Create forward rule for eth1
  shell: iptables -I FORWARD -t filter -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT -m comment --comment "Unique ID GATEWAYINPUTETH1 gateway rule accept private network connections"
  when: iptablesrules.stdout.find("GATEWAYINPUTETH1") == -1

- name: Iptables | Explicitly save current rules
  shell: service iptables save
  notify: restart iptables

  # Note: Ansible 1.5 does not support the "save" state, preventing this being
  # done through a handler. Easy fix is to manually call it. Adds an extra
  # restart each Ansible run, but so be it.
